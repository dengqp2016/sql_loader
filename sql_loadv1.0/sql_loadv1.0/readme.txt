加载方式：auto（自动）
ftp传输协议：sftp
加载方法：Oracle sqlldr

文件夹config_file下为三个配置文件：
ftp_conn.unl为连接ftp的配置信息。内容：IP地址|用户名|密码|发送目录|
db_conn.unl为连接数据库的配置信息。内容：用户名|密码|数据库ID|
table.unl为加载表列表

文件夹control下为sqlldr控制文件，部署程序后，需先生成控制文件，以供今后加载所用
生成控制文件方法：首先在config_file下的table.unl文件上列出所有加载表名，一个表名为一行，然后在control下执行 sh ./new.sh即可（有时候我们在生成的加载表控制文件后，根据具体要求，需要对控制文件加以修改，如：字段默认值处理，字段值过滤等信息的补充）。

文件夹script下为加载所用脚本，其中get_z.sh为得到增量控制文件，get_data.sh为得到增量数据文件并解压,run_sqlldr.sh为将数据文件用sqlldr加载到数据库临时表

run.sh为总程序开启脚本
run.unl为程序运行开关，on为开启，off为关闭

load.sh为加载脚本，参数为发送目录名，运行此脚本会将该参数目录下的数据文件加载到Oracle库

该程序满足手动和自动切换，批量和特定数据文件导入的要求。方法如下：
1.自动加载
将run.unl文件的内容置为on，执行sh ./run.sh 程序即开始运行，自动加载今天和昨天两天的增量数据文件。若需要停止自动加载，只需将run.unl文件内容置为off即可。

2.手动加载
执行sh ./load.sh + 参数名 参数为所要加载的数据文件在数据交换服务器对应目录。
如：sh ./load.sh 20140606 加载程序就会将6月6号的文件加载到对应下游系统Oracle库中。

3.特定数据文件导入
首先将load.sh脚本下的 sh ./run_sqlldr.sh 一行加#号加以注释，执行 ./load.sh 参数名后，若参数名为20140606，则load.sh脚本执行完成后，会在loaded目录下生成20140606目录，在该目录下有个f.unl文件，内容为接口控制文件，如果需要加载某个加载表，将该表的控制文件配置在f.unl里，最后在20140606路径下执行 sh ./run_sqlldr.sh 即可。
